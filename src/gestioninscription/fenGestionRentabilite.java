/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestioninscription;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import sql.GestionBdd;

/**
 *
 * @author alan
 */
public class fenGestionRentabilite extends javax.swing.JFrame {

   Connection conn;
    Statement stmt1, stmt2;
    
    public fenGestionRentabilite() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableRentabilite = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnInscription = new javax.swing.JButton();
        cmbSessionAchevee = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tableRentabilite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableRentabilite);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestion de la rentabilite");
        jLabel1.setMaximumSize(new java.awt.Dimension(396, 37));
        jLabel1.setMinimumSize(new java.awt.Dimension(396, 37));
        jLabel1.setPreferredSize(new java.awt.Dimension(396, 37));

        btnInscription.setText("Gestion de  l'inscription");
        btnInscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscriptionActionPerformed(evt);
            }
        });

        cmbSessionAchevee.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Session achevée :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnInscription))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addComponent(cmbSessionAchevee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSessionAchevee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnInscription, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscriptionActionPerformed
        FenInscription f1 = new FenInscription();
        f1.setSize(1200, 600);
        f1.setVisible(true);
    }//GEN-LAST:event_btnInscriptionActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
try
            {
                // On prévoit 2 connexions à la base
                stmt1 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
                stmt2 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
                // Liste des clients qui "ont un plan de formation"
                String req = "select distinct libelleform from session_form ";
                ResultSet rs = GestionBdd.envoiRequeteLMD(stmt1,req);
                cmbSessionAchevee.removeAllItems();
                cmbSessionAchevee.addItem("---");
                while (rs.next())
                {
                    cmbSessionAchevee.addItem(rs.getString(1));
                }
            }
            catch (SQLException se)
            {
                System.out.println("Erreur SQL1 : " + se.getMessage());
            }        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       renseigne();
    }//GEN-LAST:event_formWindowActivated

    private void renseigne()
    {
        try
        {
        // On vide le JTable
            int j, k;
            String req;
            for(int i=0;i<tableRentabilite.getRowCount();i++)
            {
                for (j=0;j<tableRentabilite.getColumnCount();j++)
		{
                    tableRentabilite.setValueAt(null,i,j);
		}
            }
            if (cmbSessionAchevee.getSelectedIndex()==0 || cmbSessionAchevee.getSelectedItem()== null) // Pas de client de choisi
            {
                
                // Toutes les sessions
                req = "select libelleform, niveauform, s.datedebut, nb_places, nb_inscrits";
                req += "from session_form ";
//                req += "where s.libelleform = f.libelle and s.niveauform = f.niveau ";
                // et date supérieure à la date du jour
                btnInscription.setVisible(false); // On rend le bouton inscription non visible
            }
            else
            {
                // Sélection des sessions "autorisées"
                req = "select niveauform, datedebut, nb_places, nb_inscrits";
                req += "from session_form";
                req += "where libelleform = '" + cmbSessionAchevee.getSelectedItem() + "' ";
//                req += "and p.matricule = c.matricule and nb_places > nb_inscrits ";
//                req += "and p.libelle_form = f.libelle and p.niveau = f.niveau ";
//                req += "and s.libelleform = f.libelle and s.niveauform = f.niveau ";
                // et date supérieure à la date du jour
                req += "and close = 0 and effectue = 0 and s.numero Not In ";
                req += "(Select num_session From inscription Where matricule = '" + cmbSessionAchevee.getSelectedItem() + "')";
                if (tableRentabilite.getValueAt(tableRentabilite.getSelectedRow(), 0) != null) //Si la cellule sélectionnée est vide
                {
                    btnInscription.setVisible(false); // On rend le bouton inscription non visible
                }
            }
            stmt1 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            ResultSet rs2 = GestionBdd.envoiRequeteLMD(stmt1, req);
            ResultSet rs3 = null;
            
            k = 0;
            try
            {
                while(rs2.next())
                {
//                    if (k==0 && cmbSessionAchevee.getSelectedIndex()!=0)
//                    {
//                        jLabel3.setText("Sessions autorisées pour : " + rs2.getString(1));
//                    }
                    // On calcule la marge et on renseigne la dernière colonne(7ème) du jTable
                    req = "Select sum(taux_horaire) as revenu_session ";
                    req += "from statut st, session_form s, client c, inscription i ";
                    req += "where s.numero = i.num_session and c.matricule = i.matricule ";
                    req += "and c.typestatut = st.type and s.numero = " + rs2.getInt(2);
                    stmt2 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
                    rs3 = GestionBdd.envoiRequeteLMD(stmt2, req);
                    rs3.first();
                    tableRentabilite.setValueAt((rs3.getFloat(1) - rs2.getFloat(9)), k, 7);
                    // On renseigne le reste du jTable
                    for (j=0;j<(tableRentabilite.getColumnCount() -1);j++)
                    {
                        tableRentabilite.setValueAt(rs2.getObject(j+2), k, j);
                    }
                    k++;
                }
                rs2.close();
            }
            catch (SQLException sqle)
            {
                System.out.print("Erreur SQL : " + sqle.getMessage());
            }
        }
        catch(NullPointerException npe)
        {
            System.out.println("Erreur : " + npe.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenGestionRentabilite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenGestionRentabilite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenGestionRentabilite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenGestionRentabilite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fenGestionRentabilite().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInscription;
    private javax.swing.JComboBox cmbSessionAchevee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRentabilite;
    // End of variables declaration//GEN-END:variables
}
